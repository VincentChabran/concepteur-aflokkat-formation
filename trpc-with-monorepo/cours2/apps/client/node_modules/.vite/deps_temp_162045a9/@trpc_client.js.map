{
  "version": 3,
  "sources": ["../../../../../node_modules/@trpc/server/dist/observable-ade1bad8.mjs", "../../../../../node_modules/@trpc/server/dist/observable/index.mjs", "../../../../../node_modules/@trpc/client/dist/transformResult-6fb67924.mjs", "../../../../../node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs", "../../../../../node_modules/@trpc/server/dist/index-972002da.mjs", "../../../../../node_modules/@trpc/client/dist/httpUtils-9b676ab4.mjs", "../../../../../node_modules/@trpc/client/dist/links/httpBatchLink.mjs", "../../../../../node_modules/@trpc/client/dist/links/httpLink.mjs", "../../../../../node_modules/@trpc/client/dist/links/loggerLink.mjs", "../../../../../node_modules/@trpc/client/dist/links/wsLink.mjs", "../../../../../node_modules/@trpc/client/dist/index.mjs"],
  "sourcesContent": ["function identity(x) {\n    return x;\n}\n\n/** @internal */ function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce((prev, fn)=>fn(prev), input);\n    };\n}\n\nfunction isObservable(x) {\n    return typeof x === 'object' && x !== null && 'subscribe' in x;\n}\nfunction observable(subscribe) {\n    const self = {\n        subscribe (observer) {\n            let teardownRef = null;\n            let isDone = false;\n            let unsubscribed = false;\n            let teardownImmediately = false;\n            function unsubscribe() {\n                if (teardownRef === null) {\n                    teardownImmediately = true;\n                    return;\n                }\n                if (unsubscribed) {\n                    return;\n                }\n                unsubscribed = true;\n                if (typeof teardownRef === 'function') {\n                    teardownRef();\n                } else if (teardownRef) {\n                    teardownRef.unsubscribe();\n                }\n            }\n            teardownRef = subscribe({\n                next (value) {\n                    if (isDone) {\n                        return;\n                    }\n                    observer.next?.(value);\n                },\n                error (err) {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n                    observer.error?.(err);\n                    unsubscribe();\n                },\n                complete () {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n                    observer.complete?.();\n                    unsubscribe();\n                }\n            });\n            if (teardownImmediately) {\n                unsubscribe();\n            }\n            return {\n                unsubscribe\n            };\n        },\n        pipe (...operations) {\n            return pipeFromArray(operations)(self);\n        }\n    };\n    return self;\n}\n\nexport { isObservable as i, observable as o };\n", "export { i as isObservable, o as observable } from '../observable-ade1bad8.mjs';\n\nfunction share(_opts) {\n    return (originalObserver)=>{\n        let refCount = 0;\n        let subscription = null;\n        const observers = [];\n        function startIfNeeded() {\n            if (subscription) {\n                return;\n            }\n            subscription = originalObserver.subscribe({\n                next (value) {\n                    for (const observer of observers){\n                        observer.next?.(value);\n                    }\n                },\n                error (error) {\n                    for (const observer of observers){\n                        observer.error?.(error);\n                    }\n                },\n                complete () {\n                    for (const observer of observers){\n                        observer.complete?.();\n                    }\n                }\n            });\n        }\n        function resetIfNeeded() {\n            // \"resetOnRefCountZero\"\n            if (refCount === 0 && subscription) {\n                const _sub = subscription;\n                subscription = null;\n                _sub.unsubscribe();\n            }\n        }\n        return {\n            subscribe (observer) {\n                refCount++;\n                observers.push(observer);\n                startIfNeeded();\n                return {\n                    unsubscribe () {\n                        refCount--;\n                        resetIfNeeded();\n                        const index = observers.findIndex((v)=>v === observer);\n                        if (index > -1) {\n                            observers.splice(index, 1);\n                        }\n                    }\n                };\n            }\n        };\n    };\n}\n\nfunction map(project) {\n    return (originalObserver)=>{\n        return {\n            subscribe (observer) {\n                let index = 0;\n                const subscription = originalObserver.subscribe({\n                    next (value) {\n                        observer.next?.(project(value, index++));\n                    },\n                    error (error) {\n                        observer.error?.(error);\n                    },\n                    complete () {\n                        observer.complete?.();\n                    }\n                });\n                return subscription;\n            }\n        };\n    };\n}\n\nfunction tap(observer) {\n    return (originalObserver)=>{\n        return {\n            subscribe (observer2) {\n                return originalObserver.subscribe({\n                    next (v) {\n                        observer.next?.(v);\n                        observer2.next?.(v);\n                    },\n                    error (v) {\n                        observer.error?.(v);\n                        observer2.error?.(v);\n                    },\n                    complete () {\n                        observer.complete?.();\n                        observer2.complete?.();\n                    }\n                });\n            }\n        };\n    };\n}\n\nclass ObservableAbortError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'ObservableAbortError';\n        Object.setPrototypeOf(this, ObservableAbortError.prototype);\n    }\n}\n/** @internal */ function observableToPromise(observable) {\n    let abort;\n    const promise = new Promise((resolve, reject)=>{\n        let isDone = false;\n        function onDone() {\n            if (isDone) {\n                return;\n            }\n            isDone = true;\n            reject(new ObservableAbortError('This operation was aborted.'));\n            obs$.unsubscribe();\n        }\n        const obs$ = observable.subscribe({\n            next (data) {\n                isDone = true;\n                resolve(data);\n                onDone();\n            },\n            error (data) {\n                isDone = true;\n                reject(data);\n                onDone();\n            },\n            complete () {\n                isDone = true;\n                onDone();\n            }\n        });\n        abort = onDone;\n    });\n    return {\n        promise,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        abort: abort\n    };\n}\n\nexport { map, observableToPromise, share, tap };\n", "class TRPCClientError extends Error {\n    static from(cause, opts = {}) {\n        if (!(cause instanceof Error)) {\n            return new TRPCClientError(cause.error.message ?? '', {\n                ...opts,\n                cause: undefined,\n                result: cause\n            });\n        }\n        if (cause.name === 'TRPCClientError') {\n            return cause;\n        }\n        return new TRPCClientError(cause.message, {\n            ...opts,\n            cause,\n            result: null\n        });\n    }\n    constructor(message, opts){\n        const cause = opts?.cause;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore https://github.com/tc39/proposal-error-cause\n        super(message, {\n            cause\n        });\n        this.meta = opts?.meta;\n        this.cause = cause;\n        this.shape = opts?.result?.error;\n        this.data = opts?.result?.error.data;\n        this.name = 'TRPCClientError';\n        Object.setPrototypeOf(this, TRPCClientError.prototype);\n    }\n}\n\n// FIXME:\n// - the generics here are probably unnecessary\n// - the RPC-spec could probably be simplified to combine HTTP + WS\n/** @internal */ function transformResultInner(response, runtime) {\n    if ('error' in response) {\n        const error = runtime.transformer.deserialize(response.error);\n        return {\n            ok: false,\n            error: {\n                ...response,\n                error\n            }\n        };\n    }\n    const result = {\n        ...response.result,\n        ...(!response.result.type || response.result.type === 'data') && {\n            type: 'data',\n            data: runtime.transformer.deserialize(response.result.data)\n        }\n    };\n    return {\n        ok: true,\n        result\n    };\n}\nfunction isObject(value) {\n    // check that value is object\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n/**\n * Transforms and validates that the result is a valid TRPCResponse\n * @internal\n */ function transformResult(response, runtime) {\n    let result;\n    try {\n        // Use the data transformers on the JSON-response\n        result = transformResultInner(response, runtime);\n    } catch (err) {\n        throw new TRPCClientError('Unable to transform response from server');\n    }\n    // check that output of the transformers is a valid TRPCResponse\n    if (!result.ok && (!isObject(result.error.error) || typeof result.error.error.code !== 'number')) {\n        throw new TRPCClientError('Badly formatted response from server');\n    }\n    if (result.ok && !isObject(result.result)) {\n        throw new TRPCClientError('Badly formatted response from server');\n    }\n    return result;\n}\n\nexport { TRPCClientError as T, transformResult as t };\n", "import { observable } from '@trpc/server/observable';\n\n/** @internal */ function createChain(opts) {\n    return observable((observer)=>{\n        function execute(index = 0, op = opts.op) {\n            const next = opts.links[index];\n            if (!next) {\n                throw new Error('No more links to execute - did you forget to add an ending link?');\n            }\n            const subscription = next({\n                op,\n                next (nextOp) {\n                    const nextObserver = execute(index + 1, nextOp);\n                    return nextObserver;\n                }\n            });\n            return subscription;\n        }\n        const obs$ = execute();\n        return obs$.subscribe(observer);\n    });\n}\n\nfunction asArray(value) {\n    return Array.isArray(value) ? value : [\n        value\n    ];\n}\nfunction splitLink(opts) {\n    return (runtime)=>{\n        const yes = asArray(opts.true).map((link)=>link(runtime));\n        const no = asArray(opts.false).map((link)=>link(runtime));\n        return (props)=>{\n            return observable((observer)=>{\n                const links = opts.condition(props.op) ? yes : no;\n                return createChain({\n                    op: props.op,\n                    links\n                }).subscribe(observer);\n            });\n        };\n    };\n}\n\nexport { createChain as c, splitLink as s };\n", "const noop = ()=>{\n// noop\n};\nfunction createInnerProxy(callback, path) {\n    const proxy = new Proxy(noop, {\n        get (_obj, key) {\n            if (typeof key !== 'string' || key === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return createInnerProxy(callback, [\n                ...path,\n                key\n            ]);\n        },\n        apply (_1, _2, args) {\n            return callback({\n                args,\n                path\n            });\n        }\n    });\n    return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */ const createRecursiveProxy = (callback)=>createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */ const createFlatProxy = (callback)=>{\n    return new Proxy(noop, {\n        get (_obj, name) {\n            if (typeof name !== 'string' || name === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return callback(name);\n        }\n    });\n};\n\nexport { createRecursiveProxy as a, createFlatProxy as c };\n", "const isFunction = (fn)=>typeof fn === 'function';\nfunction _bind(fn, thisArg) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    return isFunction(fn.bind) ? fn.bind(thisArg) : fn;\n}\nfunction getFetch(customFetchImpl) {\n    if (customFetchImpl) {\n        return customFetchImpl;\n    }\n    if (typeof window !== 'undefined' && isFunction(window.fetch)) {\n        return _bind(window.fetch, window);\n    }\n    if (typeof globalThis !== 'undefined' && isFunction(globalThis.fetch)) {\n        return _bind(globalThis.fetch, globalThis);\n    }\n    throw new Error('No fetch implementation found');\n}\n\nfunction getAbortController(customAbortControllerImpl) {\n    if (customAbortControllerImpl) {\n        return customAbortControllerImpl;\n    }\n    if (typeof window !== 'undefined' && window.AbortController) {\n        return window.AbortController;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.AbortController) {\n        return globalThis.AbortController;\n    }\n    return null;\n}\n\nfunction resolveHTTPLinkOptions(opts) {\n    const headers = opts.headers || (()=>({}));\n    return {\n        url: opts.url,\n        fetch: getFetch(opts.fetch),\n        AbortController: getAbortController(opts.AbortController),\n        headers: typeof headers === 'function' ? headers : ()=>headers\n    };\n}\n// https://github.com/trpc/trpc/pull/669\nfunction arrayToDict(array) {\n    const dict = {};\n    for(let index = 0; index < array.length; index++){\n        const element = array[index];\n        dict[index] = element;\n    }\n    return dict;\n}\nconst METHOD = {\n    query: 'GET',\n    mutation: 'POST'\n};\nfunction getInput(opts) {\n    return 'input' in opts ? opts.runtime.transformer.serialize(opts.input) : arrayToDict(opts.inputs.map((_input)=>opts.runtime.transformer.serialize(_input)));\n}\nfunction getUrl(opts) {\n    let url = opts.url + '/' + opts.path;\n    const queryParts = [];\n    if ('inputs' in opts) {\n        queryParts.push('batch=1');\n    }\n    if (opts.type === 'query') {\n        const input = getInput(opts);\n        if (input !== undefined) {\n            queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`);\n        }\n    }\n    if (queryParts.length) {\n        url += '?' + queryParts.join('&');\n    }\n    return url;\n}\nfunction getBody(opts) {\n    if (opts.type === 'query') {\n        return undefined;\n    }\n    const input = getInput(opts);\n    return input !== undefined ? JSON.stringify(input) : undefined;\n}\nfunction httpRequest(opts) {\n    const { type  } = opts;\n    const ac = opts.AbortController ? new opts.AbortController() : null;\n    const promise = new Promise((resolve, reject)=>{\n        const url = getUrl(opts);\n        const body = getBody(opts);\n        const meta = {};\n        Promise.resolve(opts.headers()).then((headers)=>{\n            /* istanbul ignore if -- @preserve */ if (type === 'subscription') {\n                throw new Error('Subscriptions should use wsLink');\n            }\n            return opts.fetch(url, {\n                method: METHOD[type],\n                signal: ac?.signal,\n                body: body,\n                headers: {\n                    'content-type': 'application/json',\n                    ...headers\n                }\n            });\n        }).then((_res)=>{\n            meta.response = _res;\n            return _res.json();\n        }).then((json)=>{\n            resolve({\n                json: json,\n                meta\n            });\n        }).catch(reject);\n    });\n    const cancel = ()=>{\n        ac?.abort();\n    };\n    return {\n        promise,\n        cancel\n    };\n}\n\nexport { getUrl as a, getFetch as g, httpRequest as h, resolveHTTPLinkOptions as r };\n", "import { observable } from '@trpc/server/observable';\nimport { t as transformResult, T as TRPCClientError } from '../transformResult-6fb67924.mjs';\nimport { r as resolveHTTPLinkOptions, a as getUrl, h as httpRequest } from '../httpUtils-9b676ab4.mjs';\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */ /**\n * A function that should never be called unless we messed something up.\n */ const throwFatalError = ()=>{\n    throw new Error('Something went wrong. Please submit an issue at https://github.com/trpc/trpc/issues/new');\n};\n/**\n * Dataloader that's very inspired by https://github.com/graphql/dataloader\n * Less configuration, no caching, and allows you to cancel requests\n * When cancelling a single fetch the whole batch will be cancelled only when _all_ items are cancelled\n */ function dataLoader(batchLoader) {\n    let pendingItems = null;\n    let dispatchTimer = null;\n    const destroyTimerAndPendingItems = ()=>{\n        clearTimeout(dispatchTimer);\n        dispatchTimer = null;\n        pendingItems = null;\n    };\n    /**\n   * Iterate through the items and split them into groups based on the `batchLoader`'s validate function\n   */ function groupItems(items) {\n        const groupedItems = [\n            []\n        ];\n        let index = 0;\n        while(true){\n            const item = items[index];\n            if (!item) {\n                break;\n            }\n            const lastGroup = groupedItems[groupedItems.length - 1];\n            if (item.aborted) {\n                // Item was aborted before it was dispatched\n                item.reject(new Error('Aborted'));\n                index++;\n                continue;\n            }\n            const isValid = batchLoader.validate(lastGroup.concat(item).map((it)=>it.key));\n            if (isValid) {\n                lastGroup.push(item);\n                index++;\n                continue;\n            }\n            if (lastGroup.length === 0) {\n                item.reject(new Error('Input is too big for a single dispatch'));\n                index++;\n                continue;\n            }\n            // Create new group, next iteration will try to add the item to that\n            groupedItems.push([]);\n        }\n        return groupedItems;\n    }\n    function dispatch() {\n        const groupedItems = groupItems(pendingItems);\n        destroyTimerAndPendingItems();\n        // Create batches for each group of items\n        for (const items of groupedItems){\n            if (!items.length) {\n                continue;\n            }\n            const batch = {\n                items,\n                cancel: throwFatalError\n            };\n            for (const item of items){\n                item.batch = batch;\n            }\n            const { promise , cancel  } = batchLoader.fetch(batch.items.map((_item)=>_item.key));\n            batch.cancel = cancel;\n            promise.then((result)=>{\n                for(let i = 0; i < result.length; i++){\n                    const value = result[i];\n                    const item = batch.items[i];\n                    item.resolve(value);\n                    item.batch = null;\n                }\n            }).catch((cause)=>{\n                for (const item of batch.items){\n                    item.reject(cause);\n                    item.batch = null;\n                }\n            });\n        }\n    }\n    function load(key) {\n        const item = {\n            aborted: false,\n            key,\n            batch: null,\n            resolve: throwFatalError,\n            reject: throwFatalError\n        };\n        const promise = new Promise((resolve, reject)=>{\n            item.reject = reject;\n            item.resolve = resolve;\n            if (!pendingItems) {\n                pendingItems = [];\n            }\n            pendingItems.push(item);\n        });\n        if (!dispatchTimer) {\n            dispatchTimer = setTimeout(dispatch);\n        }\n        const cancel = ()=>{\n            item.aborted = true;\n            if (item.batch?.items.every((item)=>item.aborted)) {\n                // All items in the batch have been cancelled\n                item.batch.cancel();\n                item.batch = null;\n            }\n        };\n        return {\n            promise,\n            cancel\n        };\n    }\n    return {\n        load\n    };\n}\n\nfunction httpBatchLink(opts) {\n    const resolvedOpts = resolveHTTPLinkOptions(opts);\n    // initialized config\n    return (runtime)=>{\n        const maxURLLength = opts.maxURLLength || Infinity;\n        const batchLoader = (type)=>{\n            const validate = (batchOps)=>{\n                if (maxURLLength === Infinity) {\n                    // escape hatch for quick calcs\n                    return true;\n                }\n                const path = batchOps.map((op)=>op.path).join(',');\n                const inputs = batchOps.map((op)=>op.input);\n                const url = getUrl({\n                    ...resolvedOpts,\n                    runtime,\n                    type,\n                    path,\n                    inputs\n                });\n                return url.length <= maxURLLength;\n            };\n            const fetch = (batchOps)=>{\n                const path = batchOps.map((op)=>op.path).join(',');\n                const inputs = batchOps.map((op)=>op.input);\n                const { promise , cancel  } = httpRequest({\n                    ...resolvedOpts,\n                    runtime,\n                    type,\n                    path,\n                    inputs\n                });\n                return {\n                    promise: promise.then((res)=>{\n                        const resJSON = Array.isArray(res.json) ? res.json : batchOps.map(()=>res.json);\n                        const result = resJSON.map((item)=>({\n                                meta: res.meta,\n                                json: item\n                            }));\n                        return result;\n                    }),\n                    cancel\n                };\n            };\n            return {\n                validate,\n                fetch\n            };\n        };\n        const query = dataLoader(batchLoader('query'));\n        const mutation = dataLoader(batchLoader('mutation'));\n        const subscription = dataLoader(batchLoader('subscription'));\n        const loaders = {\n            query,\n            subscription,\n            mutation\n        };\n        return ({ op  })=>{\n            return observable((observer)=>{\n                const loader = loaders[op.type];\n                const { promise , cancel  } = loader.load(op);\n                promise.then((res)=>{\n                    const transformed = transformResult(res.json, runtime);\n                    if (!transformed.ok) {\n                        observer.error(TRPCClientError.from(transformed.error, {\n                            meta: res.meta\n                        }));\n                        return;\n                    }\n                    observer.next({\n                        context: res.meta,\n                        result: transformed.result\n                    });\n                    observer.complete();\n                }).catch((err)=>observer.error(TRPCClientError.from(err)));\n                return ()=>{\n                    cancel();\n                };\n            });\n        };\n    };\n}\n\nexport { httpBatchLink };\n", "import { observable } from '@trpc/server/observable';\nimport { t as transformResult, T as TRPCClientError } from '../transformResult-6fb67924.mjs';\nimport { r as resolveHTTPLinkOptions, h as httpRequest } from '../httpUtils-9b676ab4.mjs';\n\nfunction httpLink(opts) {\n    const resolvedOpts = resolveHTTPLinkOptions(opts);\n    return (runtime)=>({ op  })=>observable((observer)=>{\n                const { path , input , type  } = op;\n                const { promise , cancel  } = httpRequest({\n                    ...resolvedOpts,\n                    runtime,\n                    type,\n                    path,\n                    input\n                });\n                promise.then((res)=>{\n                    const transformed = transformResult(res.json, runtime);\n                    if (!transformed.ok) {\n                        observer.error(TRPCClientError.from(transformed.error, {\n                            meta: res.meta\n                        }));\n                        return;\n                    }\n                    observer.next({\n                        context: res.meta,\n                        result: transformed.result\n                    });\n                    observer.complete();\n                }).catch((cause)=>observer.error(TRPCClientError.from(cause)));\n                return ()=>{\n                    cancel();\n                };\n            });\n}\n\nexport { httpLink };\n", "import { observable, tap } from '@trpc/server/observable';\n\nconst palette = {\n    query: [\n        '72e3ff',\n        '3fb0d8'\n    ],\n    mutation: [\n        'c5a3fc',\n        '904dfc'\n    ],\n    subscription: [\n        'ff49e1',\n        'd83fbe'\n    ]\n};\n// maybe this should be moved to it's own package\nconst defaultLogger = (c = console)=>(props)=>{\n        const { direction , input , type , path , context , id  } = props;\n        const [light, dark] = palette[type];\n        const css = `\n    background-color: #${direction === 'up' ? light : dark}; \n    color: ${direction === 'up' ? 'black' : 'white'};\n    padding: 2px;\n  `;\n        const parts = [\n            '%c',\n            direction === 'up' ? '>>' : '<<',\n            type,\n            `#${id}`,\n            `%c${path}%c`,\n            '%O'\n        ];\n        const args = [\n            css,\n            `${css}; font-weight: bold;`,\n            `${css}; font-weight: normal;`\n        ];\n        if (props.direction === 'up') {\n            args.push({\n                input,\n                context: context\n            });\n        } else {\n            args.push({\n                input,\n                result: props.result,\n                elapsedMs: props.elapsedMs,\n                context\n            });\n        }\n        const fn = props.direction === 'down' && props.result && (props.result instanceof Error || 'error' in props.result.result) ? 'error' : 'log';\n        c[fn].apply(null, [\n            parts.join(' ')\n        ].concat(args));\n    };\nfunction loggerLink(opts = {}) {\n    const { enabled =()=>true  } = opts;\n    const { logger =defaultLogger(opts.console)  } = opts;\n    return ()=>{\n        return ({ op , next  })=>{\n            return observable((observer)=>{\n                // ->\n                enabled({\n                    ...op,\n                    direction: 'up'\n                }) && logger({\n                    ...op,\n                    direction: 'up'\n                });\n                const requestStartTime = Date.now();\n                function logResult(result) {\n                    const elapsedMs = Date.now() - requestStartTime;\n                    enabled({\n                        ...op,\n                        direction: 'down',\n                        result\n                    }) && logger({\n                        ...op,\n                        direction: 'down',\n                        elapsedMs,\n                        result\n                    });\n                }\n                return next(op).pipe(tap({\n                    next (result) {\n                        logResult(result);\n                    },\n                    error (result) {\n                        logResult(result);\n                    }\n                })).subscribe(observer);\n            });\n        };\n    };\n}\n\nexport { loggerLink };\n", "import { observable } from '@trpc/server/observable';\nimport { T as TRPCClientError, t as transformResult } from '../transformResult-6fb67924.mjs';\n\n/* istanbul ignore next -- @preserve */ const retryDelay = (attemptIndex)=>attemptIndex === 0 ? 0 : Math.min(1000 * 2 ** attemptIndex, 30000);\n\nfunction createWSClient(opts) {\n    const { url , WebSocket: WebSocketImpl = WebSocket , retryDelayMs: retryDelayFn = retryDelay , onOpen , onClose  } = opts;\n    /* istanbul ignore next -- @preserve */ if (!WebSocketImpl) {\n        throw new Error(\"No WebSocket implementation found - you probably don't want to use this on the server, but if you do you need to pass a `WebSocket`-ponyfill\");\n    }\n    /**\n   * outgoing messages buffer whilst not open\n   */ let outgoing = [];\n    const pendingRequests = Object.create(null);\n    let connectAttempt = 0;\n    let dispatchTimer = null;\n    let connectTimer = null;\n    let activeConnection = createWS();\n    let state = 'connecting';\n    /**\n   * tries to send the list of messages\n   */ function dispatch() {\n        if (state !== 'open' || dispatchTimer) {\n            return;\n        }\n        dispatchTimer = setTimeout(()=>{\n            dispatchTimer = null;\n            if (outgoing.length === 1) {\n                // single send\n                activeConnection.send(JSON.stringify(outgoing.pop()));\n            } else {\n                // batch send\n                activeConnection.send(JSON.stringify(outgoing));\n            }\n            // clear\n            outgoing = [];\n        });\n    }\n    function tryReconnect() {\n        if (connectTimer || state === 'closed') {\n            return;\n        }\n        const timeout = retryDelayFn(connectAttempt++);\n        reconnectInMs(timeout);\n    }\n    function reconnect() {\n        state = 'connecting';\n        const oldConnection = activeConnection;\n        activeConnection = createWS();\n        closeIfNoPending(oldConnection);\n    }\n    function reconnectInMs(ms) {\n        if (connectTimer) {\n            return;\n        }\n        state = 'connecting';\n        connectTimer = setTimeout(reconnect, ms);\n    }\n    function closeIfNoPending(conn) {\n        // disconnect as soon as there are are no pending result\n        const hasPendingRequests = Object.values(pendingRequests).some((p)=>p.ws === conn);\n        if (!hasPendingRequests) {\n            conn.close();\n        }\n    }\n    function resumeSubscriptionOnReconnect(req) {\n        if (outgoing.some((r)=>r.id === req.op.id)) {\n            return;\n        }\n        request(req.op, req.callbacks);\n    }\n    function createWS() {\n        const urlString = typeof url === 'function' ? url() : url;\n        const conn = new WebSocketImpl(urlString);\n        clearTimeout(connectTimer);\n        connectTimer = null;\n        conn.addEventListener('open', ()=>{\n            /* istanbul ignore next -- @preserve */ if (conn !== activeConnection) {\n                return;\n            }\n            connectAttempt = 0;\n            state = 'open';\n            onOpen?.();\n            dispatch();\n        });\n        conn.addEventListener('error', ()=>{\n            if (conn === activeConnection) {\n                tryReconnect();\n            }\n        });\n        const handleIncomingRequest = (req)=>{\n            if (req.method === 'reconnect' && conn === activeConnection) {\n                if (state === 'open') {\n                    onClose?.();\n                }\n                reconnect();\n                // notify subscribers\n                for (const pendingReq of Object.values(pendingRequests)){\n                    if (pendingReq.type === 'subscription') {\n                        resumeSubscriptionOnReconnect(pendingReq);\n                    }\n                }\n            }\n        };\n        const handleIncomingResponse = (data)=>{\n            const req = data.id !== null && pendingRequests[data.id];\n            if (!req) {\n                // do something?\n                return;\n            }\n            req.callbacks.next?.(data);\n            if (req.ws !== activeConnection && conn === activeConnection) {\n                const oldWs = req.ws;\n                // gracefully replace old connection with this\n                req.ws = activeConnection;\n                closeIfNoPending(oldWs);\n            }\n            if ('result' in data && data.result.type === 'stopped' && conn === activeConnection) {\n                req.callbacks.complete();\n            }\n        };\n        conn.addEventListener('message', ({ data  })=>{\n            const msg = JSON.parse(data);\n            if ('method' in msg) {\n                handleIncomingRequest(msg);\n            } else {\n                handleIncomingResponse(msg);\n            }\n            if (conn !== activeConnection || state === 'closed') {\n                // when receiving a message, we close old connection that has no pending requests\n                closeIfNoPending(conn);\n            }\n        });\n        conn.addEventListener('close', ({ code  })=>{\n            if (state === 'open') {\n                onClose?.({\n                    code\n                });\n            }\n            if (activeConnection === conn) {\n                // connection might have been replaced already\n                tryReconnect();\n            }\n            for (const [key, req] of Object.entries(pendingRequests)){\n                if (req.ws !== conn) {\n                    continue;\n                }\n                if (state === 'closed') {\n                    // If the connection was closed, we just call `complete()` on the request\n                    delete pendingRequests[key];\n                    req.callbacks.complete?.();\n                    continue;\n                }\n                // The connection was closed either unexpectedly or because of a reconnect\n                if (req.type === 'subscription') {\n                    // Subscriptions will resume after we've reconnected\n                    resumeSubscriptionOnReconnect(req);\n                } else {\n                    // Queries and mutations will error if interrupted\n                    delete pendingRequests[key];\n                    req.callbacks.error?.(TRPCClientError.from(new TRPCWebSocketClosedError('WebSocket closed prematurely')));\n                }\n            }\n        });\n        return conn;\n    }\n    function request(op, callbacks) {\n        const { type , input , path , id  } = op;\n        const envelope = {\n            id,\n            method: type,\n            params: {\n                input,\n                path\n            }\n        };\n        pendingRequests[id] = {\n            ws: activeConnection,\n            type,\n            callbacks,\n            op\n        };\n        // enqueue message\n        outgoing.push(envelope);\n        dispatch();\n        return ()=>{\n            const callbacks = pendingRequests[id]?.callbacks;\n            delete pendingRequests[id];\n            outgoing = outgoing.filter((msg)=>msg.id !== id);\n            callbacks?.complete?.();\n            if (activeConnection.readyState === WebSocketImpl.OPEN && op.type === 'subscription') {\n                outgoing.push({\n                    id,\n                    method: 'subscription.stop'\n                });\n                dispatch();\n            }\n        };\n    }\n    return {\n        close: ()=>{\n            state = 'closed';\n            onClose?.();\n            closeIfNoPending(activeConnection);\n            clearTimeout(connectTimer);\n            connectTimer = null;\n        },\n        request,\n        getConnection () {\n            return activeConnection;\n        }\n    };\n}\nclass TRPCWebSocketClosedError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'TRPCWebSocketClosedError';\n        Object.setPrototypeOf(this, TRPCWebSocketClosedError.prototype);\n    }\n}\nclass TRPCSubscriptionEndedError extends Error {\n    constructor(message){\n        super(message);\n        this.name = 'TRPCSubscriptionEndedError';\n        Object.setPrototypeOf(this, TRPCSubscriptionEndedError.prototype);\n    }\n}\nfunction wsLink(opts) {\n    return (runtime)=>{\n        const { client  } = opts;\n        return ({ op  })=>{\n            return observable((observer)=>{\n                const { type , path , id , context  } = op;\n                const input = runtime.transformer.serialize(op.input);\n                let isDone = false;\n                const unsub = client.request({\n                    type,\n                    path,\n                    input,\n                    id,\n                    context\n                }, {\n                    error (err) {\n                        isDone = true;\n                        observer.error(err);\n                        unsub();\n                    },\n                    complete () {\n                        if (!isDone) {\n                            isDone = true;\n                            observer.error(TRPCClientError.from(new TRPCSubscriptionEndedError('Operation ended prematurely')));\n                        } else {\n                            observer.complete();\n                        }\n                    },\n                    next (message) {\n                        const transformed = transformResult(message, runtime);\n                        if (!transformed.ok) {\n                            observer.error(TRPCClientError.from(transformed.error));\n                            return;\n                        }\n                        observer.next({\n                            result: transformed.result\n                        });\n                        if (op.type !== 'subscription') {\n                            // if it isn't a subscription we don't care about next response\n                            isDone = true;\n                            unsub();\n                            observer.complete();\n                        }\n                    }\n                });\n                return ()=>{\n                    isDone = true;\n                    unsub();\n                };\n            });\n        };\n    };\n}\n\nexport { createWSClient, wsLink };\n", "import { share, observableToPromise } from '@trpc/server/observable';\nimport { T as TRPCClientError } from './transformResult-6fb67924.mjs';\nexport { T as TRPCClientError } from './transformResult-6fb67924.mjs';\nimport { c as createChain } from './splitLink-4c75f7be.mjs';\nexport { s as splitLink } from './splitLink-4c75f7be.mjs';\nimport { createFlatProxy, createRecursiveProxy } from '@trpc/server/shared';\nexport { g as getFetch } from './httpUtils-9b676ab4.mjs';\nexport { httpBatchLink } from './links/httpBatchLink.mjs';\nexport { httpLink } from './links/httpLink.mjs';\nexport { loggerLink } from './links/loggerLink.mjs';\nexport { createWSClient, wsLink } from './links/wsLink.mjs';\n\nclass TRPCUntypedClient {\n    $request({ type , input , path , context ={}  }) {\n        const chain$ = createChain({\n            links: this.links,\n            op: {\n                id: ++this.requestId,\n                type,\n                path,\n                input,\n                context\n            }\n        });\n        return chain$.pipe(share());\n    }\n    requestAsPromise(opts) {\n        const req$ = this.$request(opts);\n        const { promise , abort  } = observableToPromise(req$);\n        const abortablePromise = new Promise((resolve, reject)=>{\n            opts.signal?.addEventListener('abort', abort);\n            promise.then((envelope)=>{\n                resolve(envelope.result.data);\n            }).catch((err)=>{\n                reject(TRPCClientError.from(err));\n            });\n        });\n        return abortablePromise;\n    }\n    query(path, input, opts) {\n        return this.requestAsPromise({\n            type: 'query',\n            path,\n            input,\n            context: opts?.context,\n            signal: opts?.signal\n        });\n    }\n    mutation(path, input, opts) {\n        return this.requestAsPromise({\n            type: 'mutation',\n            path,\n            input,\n            context: opts?.context,\n            signal: opts?.signal\n        });\n    }\n    subscription(path, input, opts) {\n        const observable$ = this.$request({\n            type: 'subscription',\n            path,\n            input,\n            context: opts?.context\n        });\n        return observable$.subscribe({\n            next (envelope) {\n                if (envelope.result.type === 'started') {\n                    opts.onStarted?.();\n                } else if (envelope.result.type === 'stopped') {\n                    opts.onStopped?.();\n                } else {\n                    opts.onData?.(envelope.result.data);\n                }\n            },\n            error (err) {\n                opts.onError?.(err);\n            },\n            complete () {\n                opts.onComplete?.();\n            }\n        });\n    }\n    constructor(opts){\n        this.requestId = 0;\n        function getTransformer() {\n            const transformer = opts.transformer;\n            if (!transformer) return {\n                serialize: (data)=>data,\n                deserialize: (data)=>data\n            };\n            if ('input' in transformer) return {\n                serialize: transformer.input.serialize,\n                deserialize: transformer.output.deserialize\n            };\n            return transformer;\n        }\n        this.runtime = {\n            transformer: getTransformer()\n        };\n        // Initialize the links\n        this.links = opts.links.map((link)=>link(this.runtime));\n    }\n}\n\nfunction createTRPCUntypedClient(opts) {\n    const client = new TRPCUntypedClient(opts);\n    return client;\n}\n\n/**\n * @deprecated use `createTRPCProxyClient` instead\n */ function createTRPCClient(opts) {\n    const client = new TRPCUntypedClient(opts);\n    return client;\n}\n\nconst clientCallTypeMap = {\n    query: 'query',\n    mutate: 'mutation',\n    subscribe: 'subscription'\n};\n/**\n * @deprecated use `createTRPCProxyClient` instead\n * @internal\n */ function createTRPCClientProxy(client) {\n    return createFlatProxy((key)=>{\n        if (client.hasOwnProperty(key)) {\n            return client[key];\n        }\n        return createRecursiveProxy(({ path , args  })=>{\n            const pathCopy = [\n                key,\n                ...path\n            ];\n            const clientCallType = pathCopy.pop();\n            const procedureType = clientCallTypeMap[clientCallType];\n            const fullPath = pathCopy.join('.');\n            return client[procedureType](fullPath, ...args);\n        });\n    });\n}\nfunction createTRPCProxyClient(opts) {\n    const client = new TRPCUntypedClient(opts);\n    const proxy = createTRPCClientProxy(client);\n    return proxy;\n}\n\nexport { createTRPCClient, createTRPCClientProxy, createTRPCProxyClient, createTRPCUntypedClient };\n"],
  "mappings": "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",
  "names": ["observable", "item", "callbacks"]
}
